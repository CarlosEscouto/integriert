CREATE DATABASE SMARTDB;
GO
USE SMARTDB;
GO

CREATE TABLE AREA (
ID_AREA INT PRIMARY KEY NOT NULL IDENTITY,
NOME VARCHAR(30) NOT NULL,
DESCRICAO VARCHAR(50) NOT NULL,
RESERVA BIT NOT NULL,
CAPACIDADE_MAX INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE AREA_EVENTO (
ID_AREA_EVENTO INT PRIMARY KEY NOT NULL IDENTITY,
ID_EVENTO INT NOT NULL,
ID_AREA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE AVISO (
ID_AVISO INT PRIMARY KEY NOT NULL IDENTITY,
TITULO VARCHAR(30) NOT NULL,
DESCRICAO TEXT NOT NULL,
DT_AVISO DATETIME NOT NULL,
ID_COND INT NOT NULL,
STS_ATIVO BIT NOT NULL,
VISUALIZADO BIT
);

GO

CREATE TABLE BLOCO (
ID_BLOCO INT PRIMARY KEY NOT NULL IDENTITY,
IDENTIFICACAO VARCHAR(30) NOT NULL,
ID_COND INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE CARGO (
ID_CARGO INT PRIMARY KEY NOT NULL IDENTITY,
DESCRICAO VARCHAR(30) NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE CONDOMINIO (
ID_COND INT PRIMARY KEY NOT NULL IDENTITY,
DT_INAUGURACAO DATE NOT NULL,
PROPRIETARIO VARCHAR(50) NOT NULL,
CNPJ CHAR (14) NOT NULL,
STS_ATIVO BIT NOT NULL,
NOME_COND VARCHAR(60) NOT NULL,
ID_ENDERECO INT NOT NULL
);

GO

CREATE TABLE CONTA_PAGAR (
ID_CONTA_PAGAR INT PRIMARY KEY NOT NULL IDENTITY,
VALOR DECIMAL NOT NULL,
DT_PAGTO DATETIME NOT NULL,
ID_TIPO_CONTA INT NOT NULL,
ID_FORNECEDOR INT NOT NULL, 
ID_COND INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE CONTA_RECEBER (
ID_CONTA_RECEBER INT PRIMARY KEY NOT NULL IDENTITY,
VALOR DECIMAL NOT NULL,
ID_UNIDADE INT NOT NULL,
STS_ATIVO BIT NOT NULL,
DIA_PAGTO INT,
OBSERVACAO TEXT
);

GO

CREATE TABLE CORRESPONDENCIA (
ID_CORRESPONDENCIA INT PRIMARY KEY NOT NULL IDENTITY,
DESCRICAO VARCHAR(50) NOT NULL,
DT_ENTRADA DATETIME NOT NULL,
DT_SAIDA DATETIME,
ID_UNIDADE INT NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO BIT NOT NULL,
OBS_CANC TEXT
);

GO

CREATE TABLE ENDERECO (
ID_ENDERECO INT PRIMARY KEY NOT NULL IDENTITY,
LOGRADOURO VARCHAR(60) NOT NULL,
NUMERO INT NOT NULL,
COMPLEMENTO VARCHAR(30),
BAIRRO VARCHAR(30) NOT NULL,
CIDADE VARCHAR(30) NOT NULL,
ESTADO CHAR(2) NOT NULL,
CEP CHAR(8) NOT NULL,
DESCRICAO VARCHAR(30) NOT NULL,
ID_PESSOA INT,
STS_ATIVO BIT NOT NULL,
ID_FORNECEDOR INT
);

GO

CREATE TABLE ENQUETE (
ID_ENQUETE INT PRIMARY KEY NOT NULL IDENTITY,
PERGUNTA VARCHAR(50) NOT NULL,
DT_INICIO DATETIME NOT NULL,
DT_FINAL DATETIME NOT NULL,
ID_COND INT NOT NULL, 
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE ENQUETE_ALTERNATIVAS (
ID_ENQUETE_ALTERNATIVAS INT PRIMARY KEY NOT NULL IDENTITY,
TEXTO VARCHAR(100) NOT NULL,
ID_ENQUETE INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE EVENTO (
ID_EVENTO INT PRIMARY KEY NOT NULL IDENTITY,
TITULO VARCHAR(30) NOT NULL,
ID_UNIDADE INT NOT NULL,
STS_ATIVO BIT NOT NULL,
DT_EVENTO DATETIME NOT NULL
);

GO

CREATE TABLE FORNECEDOR (
ID_FORNECEDOR INT PRIMARY KEY NOT NULL IDENTITY,
RAMO_ATV VARCHAR(40) NOT NULL,
CNPJ CHAR(14) UNIQUE NOT NULL,
STS_ATIVO BIT NOT NULL,
RAZAO_SOCIAL VARCHAR(60) NOT NULL
);

GO

CREATE TABLE FUNCIONARIO (
ID_FUNCIONARIO INT PRIMARY KEY NOT NULL IDENTITY,
ID_CARGO INT NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO INT NOT NULL
);

GO

CREATE TABLE LOG (
ID_LOG INT PRIMARY KEY NOT NULL IDENTITY,
ID_LOGIN INT NOT NULL,
ID_REGISTRO INT NOT NULL,
TABELA VARCHAR(20) NOT NULL,
DT_OPERACAO DATETIME NOT NULL,
TIPO_OPERACAO VARCHAR(30) NOT NULL
);

GO

CREATE TABLE LOGIN (
ID_LOGIN INT PRIMARY KEY NOT NULL IDENTITY,
EMAIL VARCHAR(50) NOT NULL UNIQUE,
SENHA VARCHAR(15) NOT NULL,
NIVEL_ACESSO CHAR(1) NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE MORADOR (
ID_MORADOR INT PRIMARY KEY NOT NULL IDENTITY,
ID_PESSOA INT NOT NULL,
ID_UNIDADE INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE OBRA (
ID_OBRA INT PRIMARY KEY NOT NULL IDENTITY,
DESCRICAO VARCHAR(40) NOT NULL,
DT_INICIO DATETIME NOT NULL,
DT_PREVISAO_TERMINO DATETIME NOT NULL,
DT_TERMINO DATETIME,
FINALIZADA BIT NOT NULL,
ID_AREA INT NOT NULL,
ID_TIPO_OBRA INT NOT NULL,
ID_COND INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE PARAMETROS (
ID_PARAMETRO INT PRIMARY KEY NOT NULL IDENTITY,
VAGAS_UNIDADE BIT NOT NULL,
ID_COND INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE PESSOA (
ID_PESSOA INT PRIMARY KEY NOT NULL IDENTITY,
NOME VARCHAR(60) NOT NULL,
CPF CHAR(11) UNIQUE NOT NULL,
RG VARCHAR(10) NOT NULL,
DT_NASC DATE,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE REC_SUGEST (
ID_RS INT PRIMARY KEY NOT NULL IDENTITY,
TITULO VARCHAR(40) NOT NULL,
DESCRICAO TEXT NOT NULL,
DT_RS DATETIME NOT NULL,
TIPO CHAR(1) NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE TELEFONE (
ID_TELEFONE INT PRIMARY KEY NOT NULL IDENTITY,
FIXO VARCHAR(13),
CELULAR VARCHAR(14),
ID_PESSOA INT,
STS_ATIVO BIT NOT NULL,
ID_FORNECEDOR INT
);

GO

CREATE TABLE TERCEIRO (
ID_TERCEIRO INT PRIMARY KEY NOT NULL IDENTITY,
ID_TIPO_SERVICO INT NOT NULL,
ID_FORNECEDOR INT NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE TERCEIRO_OBRA (
ID_TERCEIRO_OBRA INT PRIMARY KEY NOT NULL IDENTITY,
ID_TERCEIRO INT NOT NULL,
ID_OBRA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE TIPO_CONTA (
ID_TIPO_CONTA INT PRIMARY KEY NOT NULL IDENTITY,
DESCRICAO VARCHAR(40) NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE TIPO_OBRA (
ID_TIPO_OBRA INT PRIMARY KEY NOT NULL IDENTITY,
DESCRICAO VARCHAR(30) NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE TIPO_SERVICO (
ID_TIPO_SERVICO INT PRIMARY KEY NOT NULL IDENTITY,
DESCRICAO VARCHAR(30) NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE UNIDADE (
ID_UNIDADE INT PRIMARY KEY NOT NULL IDENTITY,
IDENTIFICACAO VARCHAR(10) NOT NULL,
QT_VAGAS INT,
ID_BLOCO INT NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE VEICULO (
ID_VEICULO INT PRIMARY KEY NOT NULL IDENTITY,
PLACA CHAR(7) NOT NULL,
MODELO VARCHAR(30) NOT NULL,
ID_UNIDADE INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE VISITA (
ID_VISITA INT PRIMARY KEY NOT NULL IDENTITY,
DT_INICIO DATETIME NOT NULL,
DT_FINAL DATETIME,
ID_VISITANTE INT NOT NULL,
ID_UNIDADE INT NOT NULL,
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE VISITANTE (
ID_VISITANTE INT PRIMARY KEY NOT NULL IDENTITY,
NOME VARCHAR(60) NOT NULL,
DOCUMENTO VARCHAR(14) NOT NULL,
IMG VARCHAR(100),
STS_ATIVO BIT NOT NULL
);

GO

CREATE TABLE VOTO (
ID_VOTO INT PRIMARY KEY NOT NULL IDENTITY,
ID_ENQUETE INT NOT NULL,
ID_ENQUETE_ALTERNATIVAS INT NOT NULL,
ID_PESSOA INT NOT NULL,
STS_ATIVO BIT NOT NULL
);


ALTER TABLE AREA_EVENTO ADD FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO);
ALTER TABLE AREA_EVENTO ADD FOREIGN KEY (ID_AREA) REFERENCES AREA(ID_AREA);
ALTER TABLE AVISO ADD FOREIGN KEY (ID_COND) REFERENCES CONDOMINIO(ID_COND);
ALTER TABLE BLOCO ADD FOREIGN KEY (ID_COND) REFERENCES CONDOMINIO(ID_COND);
ALTER TABLE CONTA_PAGAR ADD FOREIGN KEY (ID_TIPO_CONTA) REFERENCES TIPO_CONTA(ID_TIPO_CONTA);
ALTER TABLE CONTA_PAGAR ADD FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE CONTA_PAGAR ADD FOREIGN KEY (ID_COND) REFERENCES CONDOMINIO(ID_COND);
ALTER TABLE CONTA_RECEBER ADD FOREIGN KEY (ID_UNIDADE) REFERENCES UNIDADE(ID_UNIDADE);
ALTER TABLE CORRESPONDENCIA ADD FOREIGN KEY (ID_UNIDADE) REFERENCES UNIDADE(ID_UNIDADE);
ALTER TABLE ENDERECO ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE ENDERECO ADD FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE ENQUETE ADD FOREIGN KEY (ID_COND) REFERENCES CONDOMINIO(ID_COND);
ALTER TABLE ENQUETE_ALTERNATIVAS ADD FOREIGN KEY (ID_ENQUETE) REFERENCES ENQUETE(ID_ENQUETE);
ALTER TABLE EVENTO ADD FOREIGN KEY (ID_EVENTO) REFERENCES EVENTO(ID_EVENTO);
ALTER TABLE FUNCIONARIO ADD FOREIGN KEY (ID_CARGO) REFERENCES CARGO(ID_CARGO);
ALTER TABLE FUNCIONARIO ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE LOG ADD FOREIGN KEY (ID_LOGIN) REFERENCES LOGIN(ID_LOGIN);
ALTER TABLE LOGIN ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE MORADOR ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE MORADOR ADD FOREIGN KEY (ID_UNIDADE) REFERENCES UNIDADE(ID_UNIDADE);
ALTER TABLE OBRA ADD FOREIGN KEY (ID_AREA) REFERENCES AREA(ID_AREA);
ALTER TABLE OBRA ADD FOREIGN KEY (ID_TIPO_OBRA) REFERENCES TIPO_OBRA(ID_TIPO_OBRA);
ALTER TABLE OBRA ADD FOREIGN KEY (ID_COND) REFERENCES CONDOMINIO(ID_COND);
ALTER TABLE PARAMETROS ADD FOREIGN KEY (ID_COND) REFERENCES CONDOMINIO(ID_COND);
ALTER TABLE REC_SUGEST ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE TELEFONE ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE TELEFONE ADD FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE TERCEIRO ADD FOREIGN KEY (ID_TIPO_SERVICO) REFERENCES TIPO_SERVICO(ID_TIPO_SERVICO);
ALTER TABLE TERCEIRO ADD FOREIGN KEY (ID_FORNECEDOR) REFERENCES FORNECEDOR(ID_FORNECEDOR);
ALTER TABLE TERCEIRO ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE TERCEIRO_OBRA ADD FOREIGN KEY (ID_TERCEIRO) REFERENCES TERCEIRO(ID_TERCEIRO);
ALTER TABLE TERCEIRO_OBRA ADD FOREIGN KEY (ID_OBRA) REFERENCES OBRA(ID_OBRA);
ALTER TABLE UNIDADE ADD FOREIGN KEY (ID_BLOCO) REFERENCES BLOCO(ID_BLOCO);
ALTER TABLE UNIDADE ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);
ALTER TABLE VEICULO ADD FOREIGN KEY (ID_UNIDADE) REFERENCES UNIDADE(ID_UNIDADE);
ALTER TABLE VISITA ADD FOREIGN KEY (ID_VISITANTE) REFERENCES VISITANTE(ID_VISITANTE);
ALTER TABLE VISITA ADD FOREIGN KEY (ID_UNIDADE) REFERENCES UNIDADE(ID_UNIDADE);
ALTER TABLE VOTO ADD FOREIGN KEY (ID_ENQUETE) REFERENCES ENQUETE(ID_ENQUETE);
ALTER TABLE VOTO ADD FOREIGN KEY (ID_ENQUETE_ALTERNATIVAS) REFERENCES ENQUETE_ALTERNATIVAS(ID_ENQUETE_ALTERNATIVAS);
ALTER TABLE VOTO ADD FOREIGN KEY (ID_PESSOA) REFERENCES PESSOA(ID_PESSOA);

-- Alterações 05-12-2017



